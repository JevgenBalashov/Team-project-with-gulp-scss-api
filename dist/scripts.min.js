let cardElem,input_search__title=document.querySelector(".search__title"),value_search__title,select_search__doctor=document.querySelector(".search__doctor"),value_search__doctor,select_search__urgency=document.querySelector(".search__urgency"),value_search__urgency;class App{constructor(){this.loginButton=document.getElementById("login__button"),this.loginForm=document.querySelector(".login__form"),this.createVisitButton=document.querySelector(".header_btn.second__btn"),this.closeIcon=document.querySelector(".close-icon"),this.logOutButton=document.getElementById("logout__button"),this.visitWindow=document.querySelector(".visit__window"),this.closeVisitWindow=document.querySelector(".icon-close"),this.emailInput=document.getElementById("email"),this.passwordInput=document.getElementById("password"),this.registerForm=document.querySelector(".register__form"),this.registerEmailInput=document.getElementById("register-email"),this.registerPasswordInput=document.getElementById("register-password"),this.initialize()}initialize(){this.addEventListeners(),this.checkAuthentication()}addEventListeners(){this.visitWindow.addEventListener("click",t=>{t.target!==document.querySelector(".visit__window")&&!t.target.classList.contains("fa-xmark")||(document.querySelector(".visit__edit-btn").style.display="none",document.querySelector("button.visit__create-btn").style.display="block",document.querySelector("span.visit__form-title").textContent="Створити візит",this.visitWindow.style.display="none",document.body.style.overflow="")}),this.createVisitButton.addEventListener("click",()=>{window.scrollTo(0,0),this.visitWindow.style.display="block",document.body.style.overflow="hidden"}),this.loginButton.addEventListener("click",()=>{window.scrollTo(0,0),this.loginForm.style.display="block",document.body.style.overflow="hidden"}),this.loginForm.addEventListener("submit",t=>{document.body.style.overflow="",t.preventDefault(),this.handleLoginFormSubmit()}),this.logOutButton.addEventListener("click",()=>{this.logout()}),this.loginForm.addEventListener("click",t=>{t.target!==document.querySelector("div.form__baground")&&!t.target.classList.contains("fa-xmark")||(this.loginForm.style.display="none",document.body.style.overflow="")}),this.registerForm&&this.registerForm.addEventListener("submit",t=>{document.body.style.overflow="",t.preventDefault(),this.handleRegisterFormSubmit()})}checkAuthentication(){this.isAuthenticated()?this.showLoggedInState():this.showLoggedOutState()}handleLoginFormSubmit(){var t=this.emailInput.value,e=this.passwordInput.value;this.login(t,e).then(t=>{t&&(console.log("Користувач успішно авторизований!"),this.loginForm.style.display="none",this.showLoggedInState())}).catch(t=>{console.log("Помилка при авторизації: "+t.message)})}handleRegisterFormSubmit(){var t=this.registerEmailInput.value,e=this.registerPasswordInput.value;this.register(t,e).then(t=>{t&&console.log("Користувач успішно зареєстрований!")}).catch(t=>{console.log("Помилка при реєстрації: "+t.message)})}login(t,e){return fetch("https://ajax.test-danit.com/api/v2/cards/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:e})}).then(t=>{if(t.ok)return t.text();throw t="Помилка при отриманні токена: "+t.status,new Error(t)}).then(t=>(this.saveToken(t),!0)).catch(t=>{throw new Error("Помилка при виконанні запиту: "+t)})}register(t,e){return fetch("https://ajax.test-danit.com/api/v2/cards",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:e})}).then(t=>t.ok?t.text():t.text().then(t=>{throw new Error(t)})).then(t=>(this.saveToken(t),!0)).catch(t=>{throw new Error("Помилка при виконанні запиту: "+t)})}logout(){document.getElementById("root").innerHTML='<span class="visit__cards-notification">no items have been added</span>',this.removeToken(),console.log("Користувач вийшов з аккаунту"),this.showLoggedOutState()}saveToken(t){localStorage.setItem("token",t)}getToken(){return localStorage.getItem("token")}removeToken(){localStorage.removeItem("token")}isAuthenticated(){var t=this.getToken();return null!=t}showLoggedInState(){getAllCards(),this.loginButton.style.display="none",this.createVisitButton.style.display="inline-block",this.logOutButton.style.display="block"}showLoggedOutState(){this.loginButton.style.display="block",this.createVisitButton.style.display="none",this.logOutButton.style.display="none"}}const app=new App;class Modal{constructor(){this.isEditing=!1,this.additionalData=!1,this.editBtn=document.querySelector(".visit__edit-btn"),this.cardiologistFields={typicalPressure:document.querySelector(".visit__info-typical-pressure"),bodyMassIndex:document.querySelector(".visit__info-body-mass-index"),heartDiseases:document.querySelector(".visit__info-heart-diseases"),ageCardiologist:document.querySelector(".visit__info-age-cardiologist")},this.dentistFields={lastVisitDate:document.querySelector(".visit__info-last-visit-date")},this.therapistFields={ageTherapist:document.querySelector(".visit__info-age-therapist")},document.querySelector(".visit__info-doctor").addEventListener("change",()=>{var t=document.querySelector(".visit__info-doctor").value;this.hideCardiologistFields(),this.hideDentistFields(),this.hideTherapistFields(),"cardiologist"===t?this.showFields(this.cardiologistFields):"dentist"===t?this.showFields(this.dentistFields):"therapist"===t&&this.showFields(this.therapistFields)}),document.querySelector(".visit__create-btn").addEventListener("click",t=>{var e,i,s,o,n;t.preventDefault(),this.allFieldsAreFilled()?(document.querySelector(".visit__window").style.display="none",document.body.style.overflow="",t=document.querySelector(".visit__info-fullname").value,e=document.querySelector(".visit__info-doctor").value,i=document.querySelector(".visit__info-purpose").value,s=document.querySelector(".visit__info-description").value,o=document.querySelector(".visit__info-urgency").value,n={},"cardiologist"===e?(n.bp=this.cardiologistFields.typicalPressure.value,n.bodyMassIndex=this.cardiologistFields.bodyMassIndex.value,n.heartDiseases=this.cardiologistFields.heartDiseases.value,n.age=this.cardiologistFields.ageCardiologist.value):"dentist"===e?n.lastVisitDate=this.dentistFields.lastVisitDate.value:"therapist"===e&&(n.age=this.therapistFields.ageTherapist.value),t={clientName:t,doctor:e,description:i+" - "+s,urgency:o,...n},fetch("https://ajax.test-danit.com/api/v2/cards",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")},body:JSON.stringify(t)}).then(t=>t.json()).then(t=>{document.querySelector(".visit__cards-notification").style.display="none",this.showCard(t),this.setupEventListeners(cardElem,t.id,t),console.log(t)}).catch(t=>{console.error("Помилка при виконанні POST запиту:",t)})):alert("Будь ласка, заповніть усі поля форми!")})}allFieldsAreFilled(){var t;for(t of document.querySelectorAll(".visit-info--showed"))if(!t.value||"null"===t.value)return!1;return!0}hideCardiologistFields(){Object.values(this.cardiologistFields).forEach(t=>{t.style.display="none",t.classList.remove("visit-info--showed")})}hideDentistFields(){Object.values(this.dentistFields).forEach(t=>{t.style.display="none",t.classList.remove("visit-info--showed")})}hideTherapistFields(){Object.values(this.therapistFields).forEach(t=>{t.style.display="none",t.classList.remove("visit-info--showed")})}showFields(t){Object.values(t).forEach(t=>{t.style.display="block",t.classList.add("visit-info--showed")})}handleEditButtonClick=(t,e)=>{var i,s,o,n,a;e.preventDefault(),this.isEditing||(this.allFieldsAreFilled()?(this.isEditing=!0,console.log(t),e=document.querySelector(".visit__info-fullname").value,i=document.querySelector(".visit__info-doctor").value,s=document.querySelector(".visit__info-purpose").value,o=document.querySelector(".visit__info-description").value,n=document.querySelector(".visit__info-urgency").value,a={},"cardiologist"===i?(a.bp=this.cardiologistFields.typicalPressure.value,a.bodyMassIndex=this.cardiologistFields.bodyMassIndex.value,a.heartDiseases=this.cardiologistFields.heartDiseases.value,a.age=this.cardiologistFields.ageCardiologist.value):"dentist"===i?a.lastVisitDate=this.dentistFields.lastVisitDate.value:"therapist"===i&&(a.age=this.therapistFields.ageTherapist.value),e={clientName:e,doctor:i,description:s+" - "+o,urgency:n,...a},fetch("https://ajax.test-danit.com/api/v2/cards/"+t,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")},body:JSON.stringify(e)}).then(t=>t.json()).then(t=>{this.isEditing=!1,document.querySelector("button.visit__create-btn").style.display="block",this.editBtn.style.display="none",document.querySelector("span.visit__form-title").textContent="Створити візит",document.querySelector(".visit__window").style.display="none",document.body.style.overflow="",cardElem.style.display="none",this.showCard(t),this.setupEventListeners(cardElem,t.id,t),console.log("Put запит пройшов успішно!"),console.log(t)}).catch(t=>{console.log("Помилка при виконанні PUT запиту: ",t),this.isEditing=!1})):alert("Будь ласка, заповніть усі поля форми!"))};setupEventListeners(d,l,r){d.addEventListener("click",t=>{var e,i,s,o,n,a;t.target.classList.contains("fa-trash")?(document.getElementById("root").removeChild(d),fetch("https://ajax.test-danit.com/api/v2/cards/"+l,{method:"DELETE",headers:{Authorization:"Bearer "+localStorage.getItem("token")}}).then(()=>{console.log(`Картка з id '${l}' була успішно видалена`),1===document.getElementById("root").children.length&&(document.querySelector(".visit__cards-notification").style.display="block")}).catch(t=>{console.error("Помилка при видаленні карти: ",t)})):t.target.classList.contains("fa-note-sticky")?(window.scrollTo(0,0),document.querySelector(".visit__window").style.display="block",document.querySelector("button.visit__create-btn").style.display="none",this.editBtn.style.display="block",document.body.style.overflow="hidden",document.querySelector("span.visit__form-title").textContent="Редагувати дані про візит",this.isEditing||this.editBtn.addEventListener("click",t=>this.handleEditButtonClick(l,t))):t.target.classList.contains("fa-circle-info")&&(this.additionalData?(d.querySelectorAll(".card__doc-profile.card__doc-profile--additional").forEach(t=>{t.style.display="none"}),this.additionalData=!1):(t=document.createElement("h3"),e=document.createElement("h3"),i=document.createElement("h3"),s=document.createElement("h3"),o=document.createElement("h3"),n=document.createElement("h3"),a=document.createElement("h3"),r.description&&(t.style.paddingTop="10px",t.textContent="Description of visit: "+r.description,t.classList.add("card__doc-profile"),t.classList.add("card__doc-profile--additional")),r.bp&&(e.style.paddingTop="10px",e.textContent="Typical pressure: "+r.bp,e.classList.add("card__doc-profile"),e.classList.add("card__doc-profile--additional")),r.age&&(i.style.paddingTop="10px",i.textContent="Age of client: "+r.age,i.classList.add("card__doc-profile"),i.classList.add("card__doc-profile--additional")),r.lastVisitDate&&(s.style.paddingTop="10px",s.textContent="Last visit: "+r.lastVisitDate,s.classList.add("card__doc-profile"),s.classList.add("card__doc-profile--additional")),r.bodyMassIndex&&(o.style.paddingTop="10px",o.textContent="Body mass index: "+r.bodyMassIndex,o.classList.add("card__doc-profile"),o.classList.add("card__doc-profile--additional")),r.heartDiseases&&(n.style.paddingTop="10px",n.textContent="Heart diseases: "+r.heartDiseases,n.classList.add("card__doc-profile"),n.classList.add("card__doc-profile--additional")),r.urgency&&(a.style.paddingTop="10px",a.textContent="Urgency of the visit: "+r.urgency,a.classList.add("card__doc-profile"),a.classList.add("card__doc-profile--additional")),d.append(t),d.append(e),d.append(i),d.append(s),d.append(o),d.append(n),d.append(a),this.additionalData=!0))})}showCard(t){var e=document.getElementById("root"),i=document.createElement("div"),s=(i.classList.add("card"),document.createElement("h1")),s=(s.classList.add("card__title"),s.textContent=t.clientName,i.append(s),document.createElement("h3")),t=(s.classList.add("card__doc-profile"),s.textContent=t.doctor,i.append(s),document.createElement("div"));t.classList.add("card__btn"),t.innerHTML=`<button class="card__btn-optional card__btn-more-info"><i class="fa-solid fa-circle-info"></i></button>
    <button class="card__btn-optional card__btn-edit-info"><i class="fa-solid fa-note-sticky"></i></button>
    <button class="card__btn-optional card__btn-delete"><i class="fa-solid fa-trash"></i></button>`,i.append(t),e.prepend(i),cardElem=i}}function getAllCards(){return fetch("https://ajax.test-danit.com/api/v2/cards",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")}}).then(t=>t.json()).then(t=>{const o=new Modal;0===t.length?document.querySelector(".visit__cards-notification").style.display="block":document.querySelector(".visit__cards-notification").style.display="none",t.forEach(t=>{o.editingCard=!1;var e=document.getElementById("root"),i=document.createElement("div"),s=(i.classList.add("card"),document.createElement("h1")),s=(s.classList.add("card__title"),s.textContent=t.clientName,i.append(s),document.createElement("h3")),s=(s.classList.add("card__doc-profile"),s.textContent=t.doctor,i.append(s),document.createElement("div"));s.classList.add("card__btn"),s.innerHTML=`<button class="card__btn-optional card__btn-more-info"><i class="fa-solid fa-circle-info"></i></button>
      <button class="card__btn-optional card__btn-edit-info"><i class="fa-solid fa-note-sticky"></i></button>
      <button class="card__btn-optional card__btn-delete"><i class="fa-solid fa-trash"></i></button>`,i.append(s),e.prepend(i),cardElem=i,o.setupEventListeners(i,t.id,t)}),console.log(t)}).catch(t=>console.log("An error occured while fetching all cards from server: ",t))}